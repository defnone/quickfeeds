name: Release Pipeline

on:
    release:
        types: [released]

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.12'

            - name: Cache pip
              uses: actions/cache@v4
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt

            - name: Install test libraries
              run: pip install pytest pytest-cov pytest-mock flask-testing

            - name: Run tests
              run: pytest

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GHCR_TOKEN }}

            - name: Extract release tag
              id: vars
              run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

            - name: Create version file
              run: echo "${{ env.TAG }}" > version.txt

            - name: Build and push Docker image for pre-release
              uses: docker/build-push-action@v5
              with:
                  context: .
                  platforms: linux/amd64,linux/arm64
                  push: true
                  cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/quickfeeds:cache
                  cache-to: type=inline
                  build-args: |
                      APP_VERSION=${{ env.TAG }}
                  tags: |
                      ghcr.io/${{ github.repository_owner }}/quickfeeds:${{ github.event.release.tag_name }}
                      ghcr.io/${{ github.repository_owner }}/quickfeeds:latest
